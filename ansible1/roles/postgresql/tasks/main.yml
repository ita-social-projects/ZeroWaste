---
- name: Ensure PostgreSQL Python libraries are installed.
  apt:
    name: "{{ postgresql_python_library }}"
    state: present

- name: Define postgresql_version.
  set_fact:
    postgresql_version: "{{ postges_version }}"

- name: Ensure PostgreSQL packages are installed.
  apt:
    name:
      - "postgresql-{{ postges_version }}"
      - "postgresql-contrib-{{ postges_version }}"
    state: present

- name: Check installed PostgreSQL version
  shell: "psql --version"
  register: postges_version_output

- debug:
    msg: "Installed PostgreSQL version {{ postges_version_output.stdout }}"

- name: Configure PostgreSQL. Set listen_address
  lineinfile:
    dest: "/etc/postgresql/{{ postges_version }}/main/postgresql.conf"
    regexp: "max_connections ="
    line: "max_connections = 1000"
    state: present
  notify: restart postgresql
  become: yes

- name: Configure PostgreSQL. Set SSL
  lineinfile:
    dest: "/etc/postgresql/{{ postges_version }}/main/postgresql.conf"
    regexp: "ssl ="
    line: "ssl = false"
    state: present
  notify: restart postgresql
  become: yes

- name: Configure PostgreSQL. Set autovacuum
  lineinfile:
    dest: "/etc/postgresql/{{ postges_version }}/main/postgresql.conf"
    regexp: "autovacuum ="
    line: "autovacuum = on"
    state: present
  notify: restart postgresql
  become: yes

- name: Configure PostgreSQL. Set hosts in pg_hba.conf
  template:
    src: pg_hba.conf.j2
    dest: "/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf"
    backup: yes
  notify: restart postgresql
  become: yes

- name: Install psycopg2
  pip:
    name: psycopg2
  become: yes

- name: Create PostgreSQL DB
  postgresql_db:
    name: "{{ postgres_db_development_name }}"
  become: yes
  become_user: "{{ postgres_user }}"

- name: Create PostgreSQL DB
  postgresql_db:
    name: "{{ postgres_db_test_name }}"
  become: yes
  become_user: "{{ postgres_user }}"

- name: Include encrypted secrets
  include_vars:
    file: vars/secrets.yml

- name: Create PostgreSQL user and grant access
  postgresql_user:
    db: "{{ postgres_db_development_name }}"
    user: "{{ postgres_user }}"
    password: "{{ postgres_user_password }}"
  become: yes
  become_user: "{{ postgres_user }}"

- name: Run rake db:migrate
  shell: |
    rake db:migrate
  become: yes
  args:
    chdir: "~/ZeroWaste/"
